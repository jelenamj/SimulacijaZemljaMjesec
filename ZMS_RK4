import numpy as np
import matplotlib.pyplot as plt
from  decimal import Decimal as D
import decimal

decimal.getcontext().prec = 30

#Mase Z.,S.,M.
Ms=D(1.989e30)
Mz=D(5.9722e24)
Mm=D(7.34767e22)
G=D(6.67e-11)

#Rastojanja
Rzs=D(147099760000.0)
Rmz=D(405696000.0)
Rms=Rmz+Rzs
RmsPrethodni=Rms
RzsPrethodni=Rzs

#Koordinate  polozaja i brzine Z., M.
Rz=np.array([Rzs,D(0.0)],np.dtype(decimal.Decimal))
Rm=np.array([Rms,D(0.0)],np.dtype(decimal.Decimal))
Vz=np.array([D(0.0),D(30280.0)],np.dtype(decimal.Decimal))
Vm=np.array([D(0.0),D(30280.0-1024.0)],np.dtype(decimal.Decimal))


def RK4Z(t,Z,V):
    #k za Vx=dx/dt, l za drugu
    Zn=0.0
    if  Z==Rz[0]:
        Zn=Rm[0]        
    elif Z==Rz[1]:
         Zn=Rm[1]        
    else:
        print('nula')
       
    k1=F1(t,Z,V)
    l1=F2(t,Z,V,Zn)
   
    k2=F1(t+dt/2,Z+dt*k1/2,V+dt*l1/2)
    l2=F2(t+dt/2,Z+dt*k1/2,V+dt*l1/2,Zn)
   
    k3=F1(t+dt/2,Z+dt*k2/2,V+dt*l2/2)
    l3=F2(t+dt/2,Z+dt*k2/2,V+dt*l2/2,Zn)
   
    k4=F1(t+dt,Z+dt*k3,V+dt*l3)
    l4=F2(t+dt,Z+dt*k3,V+dt*l3,Zn)
   
    return [dt*(l1 + D(2)*l2 + D(2)*l3+l4)/D(6),dt*(k1+ D(2)*k2+ D(2)*k3+k4)/D(6)]
def F1(t,Z,V): return V
def F2(t,Z,V,Zn): return -G*Ms*Z/Rzs**3-G*Mm*(Z-Zn)/Rmz**3

#Mjesec
def RK4M(t,Z,V):
    #k za Vx=dx/dt, l za drugu
    Zn=0.0
    if  Z==Rm[0]:
        Zn=Rz[0]        
    elif Z==Rm[1]:
         Zn=Rz[1]        
    else:
        print('nula')
   
    k1=G1(t,Z,V)
    l1=G2(t,Z,V,Zn)
   
    k2=G1(t+dt/2,Z+dt*k1/2,V+dt*l1/2)
    l2=G2(t+dt/2,Z+dt*k1/2,V+dt*l1/2,Zn)
   
    k3=G1(t+dt/2,Z+dt*k2/2,V+dt*l2/2)
    l3=G2(t+dt/2,Z+dt*k2/2,V+dt*l2/2,Zn)
   
    k4=G1(t+dt,Z+dt*k3,V+dt*l3)
    l4=G2(t+dt,Z+dt*k3,V+dt*l3,Zn)
   
    return [dt*(l1 + D(2)*l2 + D(2)*l3+l4)/D(6),dt*(k1+ D(2)*k2+ D(2)*k3+k4)/D(6)]

def G1(t,Z,V): return V
def G2(t,Z,V,Zn): return -G*Ms*Z/Rms**3-G*Mz*(Z-Zn)/Rmz**3

RKZemlja=[D(0.0),D(0.0)]
RKMjesec=[D(0.0),D(0.0)]
Rz1=[D(0.0),D(0.0)]
Rm1=[D(0.0),D(0.0)]
Vz1=[D(0.0),D(0.0)]
Vm1=[D(0.0),D(0.0)]
Xz=[]
Yz=[]
Xm=[]
Ym=[]

dt=D(100)
time=D(0.0)
a=[]

while time<D(60*60*24*365) :
    Rms=np.linalg.norm([Rm[0],Rm[1]])
    Rzs=np.linalg.norm([Rz[0],Rz[1]])
    Rmz=np.linalg.norm([(Rm[0]-Rz[0]),(Rm[1]-Rz[1])])
   
   
    #Zemlja
    #X
    RKZemlja=RK4Z(time, Rz[0], Vz[0])
    Rz1[0]=Rz[0]+RKZemlja[1]
    Vz1[0]=Vz[0]+RKZemlja[0]
    #Y
    RKZemlja=RK4Z(time, Rz[1], Vz[1])
    Rz1[1]=Rz[1]+RKZemlja[1]
    Vz1[1]=Vz[1]+RKZemlja[0]
   
    #Mjesec
    #X
    RKMjesec=RK4M(time,Rm[0],Vm[0])
    Rm1[0]=Rm[0]+RKMjesec[1]
    Vm1[0]=Vm[0]+RKMjesec[0]
    #Y
    RKMjesec=RK4M(time,Rm[1],Vm[1])
    Rm1[1]=Rm[1]+RKMjesec[1]
    Vm1[1]=Vm[1]+RKMjesec[0]
   
    Xz.append(Rz1[0])
    Yz.append(Rz1[1])
    Xm.append(Rm1[0])
    Ym.append(Rm1[1])
    Rz=Rz1
    Rm=Rm1
    Vm=Vm1
    Vz=Vz1
    time=time+dt
   
   
   
    if (time>D(60*60*24*360) and abs(Rz1[1])<2000000):
        print('Vrijeme',time,'u danima',time/D(60*60*24))
        print(' Zemlja     X= ',Rz1[0],'     Y=  ',Rz1[1])
        print(' Mjesec     X= ',Rm1[0],'     Y=  ',Rm1[1])
   
    if (RmsPrethodni-RzsPrethodni)>0 and (Rms-Rzs)<0:
        a.append(time)
       
    RmsPrethodni=Rms
    RzsPrethodni=Rzs

#print(a)
duzinamjeseci=[]
for i in range(len(a)):
    if i>0:
        duzinamjeseci.append(a[i]-a[i-1])
print('mjeseci=',duzinamjeseci)
print('srednja duzina mjeseca',sum(duzinamjeseci)/D(len(duzinamjeseci)))
plt.plot(Xm, Ym,'b')#mjesec plav
plt.plot(Xz, Yz,'y')
plt.title('h=1s')
plt.xlabel('X[m]')
plt.ylabel('Y[m]')
plt.savefig('h100godina.png')
plt.show()
